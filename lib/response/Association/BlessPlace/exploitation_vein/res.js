import { useSend, Text } from 'alemonjs';
import { redis } from '../../../../model/api.js';
import '../../../../model/Config.js';
import '../../../../config/Association.yaml.js';
import '../../../../config/help.yaml.js';
import '../../../../config/help2.yaml.js';
import '../../../../config/set.yaml.js';
import '../../../../config/shituhelp.yaml.js';
import '../../../../config/task.yaml.js';
import '../../../../config/xiuxian.yaml.js';
import data from '../../../../model/XiuxianData.js';
import '@alemonjs/db';
import '../../../../model/xiuxian_impl.js';
import { notUndAndNull, shijianc } from '../../../../model/common.js';
import { addCoin } from '../../../../model/economy.js';
import 'lodash-es';
import '../../../../model/equipment.js';
import '../../../../model/shop.js';
import '../../../../model/trade.js';
import '../../../../model/qinmidu.js';
import '../../../../model/shitu.js';
import '../../../../model/danyao.js';
import '../../../../model/temp.js';
import 'dayjs';
import 'fs';
import 'path';
import 'jsxp';
import 'react';
import '../../../../resources/html/adminset/adminset.css.js';
import '../../../../resources/font/tttgbnumber.ttf.js';
import '../../../../resources/img/state.jpg.js';
import '../../../../resources/img/user_state.png.js';
import '../../../../resources/html/association/association.css.js';
import '../../../../resources/img/player.jpg.js';
import '../../../../resources/img/player_footer.png.js';
import '../../../../resources/html/danfang/danfang.css.js';
import '../../../../resources/img/fairyrealm.jpg.js';
import '../../../../resources/html/gongfa/gongfa.css.js';
import '../../../../resources/html/equipment/equipment.css.js';
import '../../../../resources/img/equipment.jpg.js';
import '../../../../resources/html/fairyrealm/fairyrealm.css.js';
import '../../../../resources/img/card.jpg.js';
import '../../../../resources/html/forbidden_area/forbidden_area.css.js';
import '../../../../resources/img/road.jpg.js';
import '../../../../resources/html/supermarket/supermarket.css.js';
import '../../../../resources/html/Ranking/tailwindcss.css.js';
import '../../../../resources/img/user_state2.png.js';
import '../../../../resources/html/help/help.js';
import '../../../../resources/html/log/log.css.js';
import '../../../../resources/img/najie.jpg.js';
import '../../../../resources/html/ningmenghome/ningmenghome.css.js';
import '../../../../resources/html/najie/najie.css.js';
import '../../../../resources/html/player/player.css.js';
import '../../../../resources/html/playercopy/player.css.js';
import '../../../../resources/html/secret_place/secret_place.css.js';
import '../../../../resources/html/shenbing/shenbing.css.js';
import '../../../../resources/html/shifu/shifu.css.js';
import '../../../../resources/html/shitu/shitu.css.js';
import '../../../../resources/html/shituhelp/common.css.js';
import '../../../../resources/html/shituhelp/shituhelp.css.js';
import '../../../../resources/img/shituhelp.jpg.js';
import '../../../../resources/img/icon.png.js';
import '../../../../resources/html/shop/shop.css.js';
import '../../../../resources/html/statezhiye/statezhiye.css.js';
import '../../../../resources/html/sudoku/sudoku.css.js';
import '../../../../resources/html/talent/talent.css.js';
import '../../../../resources/html/temp/temp.css.js';
import '../../../../resources/html/time_place/time_place.css.js';
import '../../../../resources/html/tujian/tujian.css.js';
import '../../../../resources/html/tuzhi/tuzhi.css.js';
import '../../../../resources/html/valuables/valuables.css.js';
import '../../../../resources/img/valuables-top.jpg.js';
import '../../../../resources/img/valuables-danyao.jpg.js';
import '../../../../resources/html/updateRecord/updateRecord.css.js';
import '../../../../resources/html/BlessPlace/BlessPlace.css.js';
import '../../../../resources/html/jindi/BlessPlace.css.js';
import 'crypto';
import { selects } from '../../../index.js';

const regular = /^(#|＃|\/)?开采灵脉$/;
const 宗门灵石池上限 = [
    2000000, 5000000, 8000000, 11000000, 15000000, 20000000, 25000000, 30000000
];
function isPlayerGuildRef(v) {
    return !!v && typeof v === 'object' && '宗门名称' in v && '职位' in v;
}
function isExtAss(v) {
    return !!v && typeof v === 'object' && 'power' in v;
}
function isDateParts(v) {
    return !!v && typeof v === 'object' && 'Y' in v && 'M' in v && 'D' in v;
}
var res = onResponse(selects, async (e) => {
    const Send = useSend(e);
    const usr_qq = e.UserId;
    if (!(await data.existData('player', usr_qq)))
        return false;
    const player = (await data.getData('player', usr_qq));
    if (!player || !notUndAndNull(player.宗门) || !isPlayerGuildRef(player.宗门))
        return false;
    const assRaw = await data.getAssociation(player.宗门.宗门名称);
    if (assRaw === 'error' || !isExtAss(assRaw)) {
        Send(Text('宗门数据不存在'));
        return false;
    }
    const ass = assRaw;
    if (!ass.宗门驻地 || ass.宗门驻地 === 0) {
        Send(Text('你的宗门还没有驻地哦，没有灵脉可以开采'));
        return false;
    }
    const nowTime = Date.now();
    const Today = await shijianc(nowTime);
    const lastsign_time = await getLastsign_Explor(usr_qq);
    if (isDateParts(Today) && isDateParts(lastsign_time)) {
        if (Today.Y === lastsign_time.Y &&
            Today.M === lastsign_time.M &&
            Today.D === lastsign_time.D) {
            Send(Text('今日已经开采过灵脉，不可以竭泽而渔哦，明天再来吧'));
            return false;
        }
    }
    await redis.set(`xiuxian@1.3.0:${usr_qq}:getLastsign_Explor`, String(nowTime));
    const blessListRaw = data.bless_list;
    const blessList = Array.isArray(blessListRaw)
        ? blessListRaw
            .map(it => {
            if (it && typeof it === 'object') {
                const obj = it;
                const name = obj.name;
                const levelVal = obj.level;
                if (typeof name === 'string' && typeof levelVal === 'number') {
                    return { name, level: levelVal };
                }
            }
            return null;
        })
            .filter((v) => v !== null)
        : [];
    let dongTan = blessList.find(item => item.name === ass.宗门驻地);
    if (!dongTan)
        dongTan = blessList.find(item => item.name === '昆仑山');
    if (!dongTan) {
        Send(Text('未找到灵脉信息，稍后再试'));
        return false;
    }
    const rawLevelId = player.level_id;
    const playerLevel = typeof rawLevelId === 'number' ? rawLevelId : Number(rawLevelId) || 1;
    const baseLevel = ass.宗门神兽 === '麒麟' ? dongTan.level + 1 : dongTan.level;
    let totalYield = 1200 * baseLevel * playerLevel;
    if (ass.power === 1)
        totalYield *= 10;
    const totalInt = Math.max(1, Math.trunc(totalYield));
    const giveGuild = Math.trunc(totalInt / 2);
    const givePlayer = totalInt - giveGuild;
    const guildLevel = Math.max(1, Number(ass.宗门等级 || 1));
    const baseCap = 宗门灵石池上限[guildLevel - 1] || 宗门灵石池上限[0];
    const cap = ass.power === 1 ? baseCap * 10 : baseCap;
    const currentPool = Math.max(0, Number(ass.灵石池 || 0));
    ass.灵石池 = Math.min(cap, currentPool + giveGuild);
    await addCoin(usr_qq, givePlayer);
    await data.setAssociation(ass.宗门名称, ass);
    Send(Text(`本次开采灵脉共获得${totalInt}灵石，上交${giveGuild}灵石给宗门，自己获得${givePlayer}灵石`));
    return false;
});
async function getLastsign_Explor(usr_qq) {
    const time = await redis.get(`xiuxian@1.3.0:${usr_qq}:getLastsign_Explor`);
    if (time) {
        const parts = await shijianc(parseInt(time, 10));
        if (isDateParts(parts))
            return parts;
    }
    return null;
}

export { res as default, regular };
