import React from 'react';
import HTML from './HTML.js';

const XianChong = ({ nickname, XianChong_have, XianChong_need, Kouliang }) => {
    return (React.createElement(HTML, null,
        React.createElement("div", { className: "min-h-screen bg-gradient-to-b from-blue-100 to-blue-300 flex flex-col items-center py-6" },
            React.createElement("div", { className: "w-full max-w-2xl mx-auto" },
                React.createElement("div", { className: "text-2xl font-bold text-blue-700 mb-6 text-center drop-shadow" },
                    nickname,
                    "\u7684\u4ED9\u5BA0"),
                XianChong_have && XianChong_have.length > 0 && (React.createElement("div", { className: "bg-white rounded-xl shadow-lg p-6 mb-6" },
                    React.createElement("div", { className: "text-lg font-semibold text-green-600 mb-2" }, "\u3010\u5DF2\u62E5\u6709\u3011"),
                    React.createElement("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4" }, XianChong_have.map((item, index) => (React.createElement("div", { key: index, className: "border rounded-lg p-4 bg-gray-50 hover:bg-gray-100 transition" },
                        React.createElement("div", { className: "font-bold text-blue-800 text-lg mb-2" }, item.name),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u7C7B\u578B\uFF1A",
                            item.type),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u521D\u59CB\u52A0\u6210\uFF1A",
                            item.初始加成 * 100,
                            "%"),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u6BCF\u7EA7\u589E\u52A0\uFF1A",
                            item.每级增加 * 100,
                            "%"),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u52A0\u6210\uFF1A",
                            item.加成 * 100,
                            "%"),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u7075\u9B42\u7ED1\u5B9A\uFF1A",
                            item.灵魂绑定 === 0 ? '否' : '是'),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u54C1\u7EA7\uFF1A",
                            item.品级),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u7B49\u7EA7\u4E0A\u9650\uFF1A",
                            item.等级上限),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u4EF7\u683C\uFF1A",
                            item.出售价))))))),
                XianChong_need && XianChong_need.length > 0 && (React.createElement("div", { className: "bg-white rounded-xl shadow-lg p-6 mb-6" },
                    React.createElement("div", { className: "text-lg font-semibold text-red-600 mb-2" }, "\u3010\u672A\u62E5\u6709\u3011"),
                    React.createElement("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4" }, XianChong_need.map((item, index) => (React.createElement("div", { key: index, className: "border rounded-lg p-4 bg-gray-50 hover:bg-gray-100 transition" },
                        React.createElement("div", { className: "font-bold text-blue-800 text-lg mb-2" }, item.name),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u7C7B\u578B\uFF1A",
                            item.type),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u521D\u59CB\u52A0\u6210\uFF1A",
                            item.初始加成 * 100,
                            "%"),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u6BCF\u7EA7\u589E\u52A0\uFF1A",
                            item.每级增加 * 100,
                            "%"),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u52A0\u6210\uFF1A",
                            item.加成 * 100,
                            "%"),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u7075\u9B42\u7ED1\u5B9A\uFF1A",
                            item.灵魂绑定 === 0 ? '否' : '是'),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u54C1\u7EA7\uFF1A",
                            item.品级),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u7B49\u7EA7\u4E0A\u9650\uFF1A",
                            item.等级上限),
                        React.createElement("div", { className: "text-sm text-gray-700" },
                            "\u4EF7\u683C\uFF1A",
                            item.出售价))))))),
                React.createElement("div", { className: "bg-white rounded-xl shadow-lg p-6 mb-6" },
                    React.createElement("div", { className: "text-lg font-semibold text-yellow-600 mb-2" }, "\u3010\u53E3\u7CAE\u56FE\u9274\u3011"),
                    React.createElement("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4" }, Kouliang &&
                        Kouliang.map((item, index) => (React.createElement("div", { key: index, className: "border rounded-lg p-4 bg-gray-50 hover:bg-gray-100 transition" },
                            React.createElement("div", { className: "font-bold text-blue-800 text-lg mb-2" }, item.name),
                            React.createElement("div", { className: "text-sm text-gray-700" },
                                "\u7B49\u7EA7\uFF1A",
                                item.level),
                            React.createElement("div", { className: "text-sm text-gray-700" },
                                "\u4EF7\u683C\uFF1A",
                                item.出售价.toFixed(0)))))))))));
};

export { XianChong as default };
