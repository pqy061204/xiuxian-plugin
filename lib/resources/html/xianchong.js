import React from 'react';
import HTML from './HTML.js';

const XianChong = ({ nickname, XianChong_have, XianChong_need, Kouliang }) => {
    return (React.createElement(HTML, null,
        React.createElement("div", { className: "min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 relative overflow-hidden" },
            React.createElement("div", { className: "absolute inset-0 opacity-10" },
                React.createElement("div", { className: "absolute top-10 left-10 w-32 h-32 border border-purple-400 rounded-full" }),
                React.createElement("div", { className: "absolute top-32 right-20 w-24 h-24 border border-blue-400 rounded-full" }),
                React.createElement("div", { className: "absolute bottom-20 left-1/4 w-16 h-16 border border-cyan-400 rounded-full" }),
                React.createElement("div", { className: "absolute bottom-40 right-1/3 w-20 h-20 border border-pink-400 rounded-full" })),
            React.createElement("div", { className: "relative z-10 container mx-auto px-4 py-8" },
                React.createElement("div", { className: "text-center mb-12" },
                    React.createElement("div", { className: "inline-block relative" },
                        React.createElement("div", { className: "absolute inset-0 bg-gradient-to-r from-purple-600 to-blue-600 rounded-2xl blur-lg opacity-50" }),
                        React.createElement("div", { className: "relative bg-gradient-to-r from-purple-600 to-blue-600 rounded-2xl px-8 py-4 border border-purple-400/30" },
                            React.createElement("h1", { className: "text-3xl font-bold text-white tracking-wider" },
                                "\u2728 ",
                                nickname,
                                "\u7684\u4ED9\u5BA0\u56FE\u9274 \u2728"))),
                    React.createElement("div", { className: "mt-4 text-purple-200 text-sm" }, "\uD83D\uDC09 \u4FEE\u4ED9\u4E4B\u8DEF\uFF0C\u4ED9\u5BA0\u76F8\u4F34 \uD83D\uDC09")),
                React.createElement("div", { className: "max-w-6xl mx-auto space-y-8" },
                    XianChong_have && XianChong_have.length > 0 && (React.createElement("div", { className: "relative" },
                        React.createElement("div", { className: "absolute inset-0 bg-gradient-to-r from-green-500/20 to-emerald-500/20 rounded-3xl blur-xl" }),
                        React.createElement("div", { className: "relative backdrop-blur-sm bg-white/10 rounded-3xl border border-green-400/30 p-8" },
                            React.createElement("div", { className: "flex items-center mb-6" },
                                React.createElement("div", { className: "w-12 h-12 bg-gradient-to-br from-green-400 to-emerald-600 rounded-xl flex items-center justify-center mr-4 border border-green-300/50" },
                                    React.createElement("span", { className: "text-2xl" }, "\uD83C\uDF1F")),
                                React.createElement("h2", { className: "text-2xl font-bold text-green-300 tracking-wide" }, "\u3010\u5DF2\u62E5\u6709\u4ED9\u5BA0\u3011")),
                            React.createElement("div", { className: "grid grid-cols-2 gap-6" }, XianChong_have.map((item, index) => (React.createElement("div", { key: index, className: "group relative" },
                                React.createElement("div", { className: "absolute inset-0 bg-gradient-to-br from-green-400/20 to-emerald-600/20 rounded-2xl blur-sm" }),
                                React.createElement("div", { className: "relative backdrop-blur-md bg-white/5 rounded-2xl border border-green-400/40 p-6 hover:border-green-300/60 transition-all duration-300" },
                                    React.createElement("div", { className: "flex items-center justify-between mb-4" },
                                        React.createElement("h3", { className: "text-xl font-bold text-green-200 group-hover:text-green-100 transition-colors" }, item.name),
                                        React.createElement("div", { className: "w-8 h-8 bg-gradient-to-br from-green-400 to-emerald-600 rounded-lg flex items-center justify-center" },
                                            React.createElement("span", { className: "text-sm" }, "\uD83D\uDC3E"))),
                                    React.createElement("div", { className: "space-y-3" },
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u7C7B\u578B"),
                                            React.createElement("span", { className: "text-green-100 font-medium" }, item.type)),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u521D\u59CB\u52A0\u6210"),
                                            React.createElement("span", { className: "text-green-100 font-medium" },
                                                (item.初始加成 * 100).toFixed(1),
                                                "%")),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u6BCF\u7EA7\u589E\u52A0"),
                                            React.createElement("span", { className: "text-green-100 font-medium" },
                                                (item.每级增加 * 100).toFixed(1),
                                                "%")),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u5F53\u524D\u52A0\u6210"),
                                            React.createElement("span", { className: "text-green-100 font-medium" },
                                                (item.加成 * 100).toFixed(1),
                                                "%")),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u7075\u9B42\u7ED1\u5B9A"),
                                            React.createElement("span", { className: `font-medium ${item.灵魂绑定 === 0 ? 'text-red-300' : 'text-green-300'}` }, item.灵魂绑定 === 0 ? '❌ 否' : '✅ 是')),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u54C1\u7EA7"),
                                            React.createElement("span", { className: "text-green-100 font-medium" }, item.品级)),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u7B49\u7EA7\u4E0A\u9650"),
                                            React.createElement("span", { className: "text-green-100 font-medium" }, item.等级上限)),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u4EF7\u683C"),
                                            React.createElement("span", { className: "text-yellow-300 font-medium" }, item.出售价))))))))))),
                    XianChong_need && XianChong_need.length > 0 && (React.createElement("div", { className: "relative" },
                        React.createElement("div", { className: "absolute inset-0 bg-gradient-to-r from-red-500/20 to-pink-500/20 rounded-3xl blur-xl" }),
                        React.createElement("div", { className: "relative backdrop-blur-sm bg-white/10 rounded-3xl border border-red-400/30 p-8" },
                            React.createElement("div", { className: "flex items-center mb-6" },
                                React.createElement("div", { className: "w-12 h-12 bg-gradient-to-br from-red-400 to-pink-600 rounded-xl flex items-center justify-center mr-4 border border-red-300/50" },
                                    React.createElement("span", { className: "text-2xl" }, "\uD83D\uDD2E")),
                                React.createElement("h2", { className: "text-2xl font-bold text-red-300 tracking-wide" }, "\u3010\u672A\u62E5\u6709\u4ED9\u5BA0\u3011")),
                            React.createElement("div", { className: "grid grid-cols-2 gap-6" }, XianChong_need.map((item, index) => (React.createElement("div", { key: index, className: "group relative" },
                                React.createElement("div", { className: "absolute inset-0 bg-gradient-to-br from-red-400/20 to-pink-600/20 rounded-2xl blur-sm" }),
                                React.createElement("div", { className: "relative backdrop-blur-md bg-white/5 rounded-2xl border border-red-400/40 p-6 hover:border-red-300/60 transition-all duration-300" },
                                    React.createElement("div", { className: "flex items-center justify-between mb-4" },
                                        React.createElement("h3", { className: "text-xl font-bold text-red-200 group-hover:text-red-100 transition-colors" }, item.name),
                                        React.createElement("div", { className: "w-8 h-8 bg-gradient-to-br from-red-400 to-pink-600 rounded-lg flex items-center justify-center" },
                                            React.createElement("span", { className: "text-sm" }, "\uD83D\uDD12"))),
                                    React.createElement("div", { className: "space-y-3" },
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u7C7B\u578B"),
                                            React.createElement("span", { className: "text-red-100 font-medium" }, item.type)),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u521D\u59CB\u52A0\u6210"),
                                            React.createElement("span", { className: "text-red-100 font-medium" },
                                                (item.初始加成 * 100).toFixed(1),
                                                "%")),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u6BCF\u7EA7\u589E\u52A0"),
                                            React.createElement("span", { className: "text-red-100 font-medium" },
                                                (item.每级增加 * 100).toFixed(1),
                                                "%")),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u5F53\u524D\u52A0\u6210"),
                                            React.createElement("span", { className: "text-red-100 font-medium" },
                                                (item.加成 * 100).toFixed(1),
                                                "%")),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u7075\u9B42\u7ED1\u5B9A"),
                                            React.createElement("span", { className: `font-medium ${item.灵魂绑定 === 0 ? 'text-red-300' : 'text-green-300'}` }, item.灵魂绑定 === 0 ? '❌ 否' : '✅ 是')),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u54C1\u7EA7"),
                                            React.createElement("span", { className: "text-red-100 font-medium" }, item.品级)),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u7B49\u7EA7\u4E0A\u9650"),
                                            React.createElement("span", { className: "text-red-100 font-medium" }, item.等级上限)),
                                        React.createElement("div", { className: "flex items-center text-sm" },
                                            React.createElement("span", { className: "w-16 text-purple-200" }, "\u4EF7\u683C"),
                                            React.createElement("span", { className: "text-yellow-300 font-medium" }, item.出售价))))))))))),
                    React.createElement("div", { className: "relative" },
                        React.createElement("div", { className: "absolute inset-0 bg-gradient-to-r from-yellow-500/20 to-orange-500/20 rounded-3xl blur-xl" }),
                        React.createElement("div", { className: "relative backdrop-blur-sm bg-white/10 rounded-3xl border border-yellow-400/30 p-8" },
                            React.createElement("div", { className: "flex items-center mb-6" },
                                React.createElement("div", { className: "w-12 h-12 bg-gradient-to-br from-yellow-400 to-orange-600 rounded-xl flex items-center justify-center mr-4 border border-yellow-300/50" },
                                    React.createElement("span", { className: "text-2xl" }, "\uD83C\uDF56")),
                                React.createElement("h2", { className: "text-2xl font-bold text-yellow-300 tracking-wide" }, "\u3010\u53E3\u7CAE\u56FE\u9274\u3011")),
                            React.createElement("div", { className: "grid grid-cols-2 gap-6" }, Kouliang &&
                                Kouliang.map((item, index) => (React.createElement("div", { key: index, className: "group relative" },
                                    React.createElement("div", { className: "absolute inset-0 bg-gradient-to-br from-yellow-400/20 to-orange-600/20 rounded-2xl blur-sm" }),
                                    React.createElement("div", { className: "relative backdrop-blur-md bg-white/5 rounded-2xl border border-yellow-400/40 p-6 hover:border-yellow-300/60 transition-all duration-300" },
                                        React.createElement("div", { className: "flex items-center justify-between mb-4" },
                                            React.createElement("h3", { className: "text-xl font-bold text-yellow-200 group-hover:text-yellow-100 transition-colors" }, item.name),
                                            React.createElement("div", { className: "w-8 h-8 bg-gradient-to-br from-yellow-400 to-orange-600 rounded-lg flex items-center justify-center" },
                                                React.createElement("span", { className: "text-sm" }, "\uD83E\uDD58"))),
                                        React.createElement("div", { className: "space-y-3" },
                                            React.createElement("div", { className: "flex items-center text-sm" },
                                                React.createElement("span", { className: "w-16 text-purple-200" }, "\u7B49\u7EA7"),
                                                React.createElement("span", { className: "text-yellow-100 font-medium" }, item.level)),
                                            React.createElement("div", { className: "flex items-center text-sm" },
                                                React.createElement("span", { className: "w-16 text-purple-200" }, "\u4EF7\u683C"),
                                                React.createElement("span", { className: "text-yellow-300 font-medium" }, item.出售价.toFixed(0)))))))))))),
                React.createElement("div", { className: "text-center mt-12" },
                    React.createElement("div", { className: "inline-block px-6 py-3 bg-gradient-to-r from-purple-600/20 to-blue-600/20 rounded-full border border-purple-400/30 backdrop-blur-sm" },
                        React.createElement("span", { className: "text-purple-200 text-sm" }, "\u2728 \u4FEE\u4ED9\u4E4B\u8DEF\u6F2B\u6F2B\uFF0C\u4ED9\u5BA0\u76F8\u4F34\u524D\u884C \u2728")))))));
};

export { XianChong as default };
